# Generated by Django 5.2.3 on 2025-07-10 19:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BuyerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('delivery_address', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_name', models.CharField(max_length=255)),
                ('short_name', models.CharField(blank=True, max_length=120)),
                ('legal_form', models.CharField(choices=[('JD', 'Jednoosobowa działalność'), ('SPZOO', 'Sp. z o.o.'), ('SA', 'Spółka Akcyjna')], default='JD', max_length=30)),
                ('street', models.CharField(max_length=120)),
                ('building_no', models.CharField(max_length=20)),
                ('apartment_no', models.CharField(blank=True, max_length=20)),
                ('postal_code', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^\\d{2}-\\d{3}$', 'Enter postal code in NN-NNN format.')])),
                ('city', models.CharField(max_length=64)),
                ('country', models.CharField(default='PL', max_length=2)),
                ('nip', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Enter 10–digit NIP without prefix.')])),
                ('regon', models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator('^\\d{9}$', 'Enter 9–digit REGON.')])),
                ('krs', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Enter 10–digit KRS.')])),
                ('vat_payer', models.BooleanField(default=True)),
                ('vat_active_since', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('contact_person', models.CharField(blank=True, max_length=120)),
                ('bank_account_iban', models.CharField(blank=True, max_length=34)),
                ('swift_bic', models.CharField(blank=True, max_length=11)),
                ('invoice_display_name', models.CharField(blank=True, max_length=255)),
                ('invoice_note', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'company',
                'verbose_name_plural': 'companies',
                'constraints': [models.UniqueConstraint(fields=('nip',), name='unique_seller_nip'), models.CheckConstraint(condition=models.Q(('legal_form', 'sole_trader'), models.Q(('legal_form', 'legal_entity'), models.Q(('krs', ''), _negated=True)), _connector='OR'), name='krs_required_for_legal_entity')],
            },
        ),
        migrations.CreateModel(
            name='SellerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=255)),
                ('business_address', models.TextField()),
                ('nip', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Enter 10–digit NIP without prefix.')])),
                ('regon', models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator('^\\d{9}$', 'Enter 9–digit REGON.')])),
                ('krs', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Enter 10–digit KRS.')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seller_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Consent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('terms', 'Terms of Service'), ('privacy', 'Privacy Policy'), ('marketing', 'Marketing'), ('age', 'Age Confirmation')], max_length=20)),
                ('accepted_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'type')},
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_type', models.CharField(choices=[('buyer', 'Buyer'), ('seller', 'Seller')], max_length=10)),
                ('number', models.CharField(max_length=32, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number in E.164 format.', regex='^\\+?[1-9]\\d{7,14}$')])),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phone_numbers', to='users.buyerprofile')),
                ('seller_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phone_numbers', to='users.sellerprofile')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('buyer_profile__isnull', False), ('seller_profile__isnull', True), ('profile_type', 'buyer')), models.Q(('seller_profile__isnull', False), ('buyer_profile__isnull', True), ('profile_type', 'seller')), models.Q(('buyer_profile__isnull', True), ('seller_profile__isnull', True)), _connector='OR'), name='phone_profile_type_consistency')],
            },
        ),
    ]
